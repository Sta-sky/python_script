
class Ssh(object):
    @classmethod
    def ssh_create_client(cls, ip_num, username, passwd,
                          port=22, timeout=5, pub_key=None, status=True,
                          width=300):
        '''创建一个SSH的客户端,可以保持连接,支持密匙登录，需要密匙登录时，传入需要的pub_key即可'''
        if (not ip_num) or (not can_vm_pinged_to(ip_num, False)):
            err_msg = SSH_ERR_CODE_PRE + '1001,' + 'create ssh client failed, ' \
                                                   'ip is none or ip cannot be pinged:%s' % ip_num
            logger.error(err_msg)
            raise Exception(err_msg)
        trans = None
        try:
            ssh_client = dict()
            trans = paramiko.Transport((ip_num, port))
            if not pub_key:
                trans.connect(username=username, password=passwd)
            else:
                with open_file(pub_key) as _fp:
                    key = tostr(paramiko.RSAKey.from_private_key(_fp))
                    trans.connect(username=username, password=passwd, pkey=key)
            trans.set_keepalive(30)
            channel = trans.open_session()
            channel.settimeout(timeout)
            channel.get_pty(width=width)
            channel.invoke_shell()
            stdout = channel.makefile('r', -1)
            ssh_client['ip'] = ip_num
            ssh_client['port'] = port
            ssh_client['username'] = username
            ssh_client['timeout'] = timeout
            ssh_client['width'] = width
            ssh_client['client'] = trans
            ssh_client['channel'] = channel
            ssh_client['stdout'] = stdout
            time.sleep(2)
            if status:
                cls.get_prompt(ssh_client)
            return ssh_client

        except Exception as execpts:
            try:
                if trans:
                    trans.close()
            except Exception as ex:
                logger.error("failed to close connection after creating SSH client failed: {}."
                             .format(ex))
            err_msg = SSH_ERR_CODE_PRE + '5001,' + 'create ssh client failed. ' \
                                                   'ip:%s, username:%s, port:%s, pub_key:%s' % (
                          ip_num, username, port, pub_key)
            if not passwd:
                err_msg += ', and passwd is none'
            if str(execpts):
                err_msg += '. the error is:%s' % str(execpts)
            logger.error(err_msg)
            raise Exception(err_msg)
